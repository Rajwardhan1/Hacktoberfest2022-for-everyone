<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta http-equiv="X-UA-Compatible" content="ie=edge" />
<title>Snake Game</title>
<style>
body {
  background-color: #375;
}
 
#canvas {
  display: block;
  margin: 5px auto;
  border: 10px solid #657;
 
}
</style>
</head>
<body>
<canvas id="canvas" width="450" height="450"></canvas>

<script>
$(document).ready(function(){

// First we set variables for the canvas

            	var canvas = $("#canvas")[0];
            	var ctx = canvas.getContext("2d");
            	var w = $("#canvas").width();
            	var h = $("#canvas").height();
            	
//Here we create a variable for the width of the cell so that we can manipulate it easily.

            	var cw = 10;
            	var d;
            	var food;
            	var score;
            	 var level;
//This is where we create the snake
          var snake_array; //Here we create the array of cells that makeup the snake
            	
           function init()
            	{
                           	d = "right"; //This sets the default movement direction
                           	create_snake();
                           	create_food(); //This makes the food particle visible
                           	//This will show the score of the game
                           	score = 0;
                           	level = 1;
                           	
//Now we will move the snake utilizing the timer that initiates the paint function every 60 milliseconds


                           	if(typeof game_loop != "undefined") clearInterval(game_loop);
                           	game_loop = setInterval(paint, 100);
            	}
            	init();
            	
            	function create_snake()
            	{
                           	var length = 5; //This defines the snake’s length
                           	snake_array = []; // We begin with an empty array
                           	for(var i = length-1; i>=0; i--)
                           	{
                                           	//This will draw the snake horizontally from the top left
                                           	snake_array.push({x: i, y:0});
                           	}
            	}
//Here we create the food for the snake to eat
            	function create_food()
            	{
                           	food = {
                                           	x: Math.round(Math.random()*(w-cw)/cw),
                                           	y: Math.round(Math.random()*(h-cw)/cw),
                           	};
                           	//This creates a cell with x/y between the range of 0-44
            	}
            	//Here we draw the snake
            	function paint()
            	{
                           	//We need to draw the background on each frame in order to avoid a snake trail.
                           	//Here we paint the canvas
                           	ctx.fillStyle = "white";
                           	ctx.fillRect(0, 0, w, h);
                           	ctx.strokeStyle = "black";
                           	ctx.strokeRect(0, 0, w, h);
                           	
//Here we define the movement of the snake using simple logic
//We simply remove the tail cell and put it in front of the head cell                     	
                           	var nx = snake_array[0].x;
                           	var ny = snake_array[0].y;
                           	//This if the head cell position
                           	//We increase it to get the new head position
                           	
//Here we define directions depending on movement
                           	if(d == "right") nx++;
                           	else if(d == "left") nx--;
                           	else if(d == "up") ny--;
                           	else if(d == "down") ny++;
                           	
                           	//Now we will create the ‘game over’ variables
                           	//The game will be restarted when the snake hits the wall
                           	//So we will create the code for collision of bodies
                           	//If the snake’s head comes into contact with its body, the game restarts
                           	if(nx == -1 || nx == w/cw || ny == -1 || ny == h/cw || check_collision(nx, ny, snake_array))
                           	{
                                           	//The restart function
                                           	init();
                           	            	
                                           	return;
                           	}
//Here we will enable the snake consume the food
//Through simple logic we will first determine of the new head position of the snake
//If that position corresponds with the food, then generate new snake head instead of removing its tail                           	
                                                           	if(nx == food.x && ny == food.y)
                           	{
                                           	var tail = {x: nx, y: ny};
                                           	score++;
      
                                           	//Create new food
                                           	create_food();
                           	}
                           	else
                           	{
                                           	var tail = snake_array.pop(); //The last cell is popped out                                        	                           	            	tail.x = nx; tail.y = ny;
                           	}
                           	//Now the snake can consume food                   	
                           	snake_array.unshift(tail); //The tail put back as the first cell
                           	
                           	for(var i = 0; i < snake_array.length; i++)
                           	{
                                           	var c = snake_array[i];
                                           	//Lets paint 10px wide cells
                                           	paint_cell(c.x, c.y, "blue");
                           	}
                           	
                           	//Lets generate the food
                           	paint_cell(food.x, food.y, "red");
                           	//Lets create the score
                           	var score_text = "Score: " + score;
     var level_text = "Level: " + level;
                           	ctx.fillText(score_text, 5, h-5);
     ctx.fillText(level_text, 60, h-5);
            	}
            	
            	//Here a generic function is created to paint cells
            	function paint_cell(x, y, color)
            	{
                           	ctx.fillStyle = color;
                           	ctx.fillRect(x*cw, y*cw, cw, cw);
                           	ctx.strokeStyle = "white";
                           	ctx.strokeRect(x*cw, y*cw, cw, cw);
            	}
            	
            	function check_collision(x, y, array)
            	{
                           	//Here we check an array of cells for the existence of the x/y coordinates provided
                           	for(var i = 0; i < array.length; i++)
                           	{
                                           	if(array[i].x == x && array[i].y == y)
                                           	 return true;
                           	}
                           	return false;
            	}
//We define the keyboard keys as follows
            	$(document).keydown(function(e){
                           	var key = e.which;
                           	
//The function prevents reverse gear
                           	if(key == "37" && d != "right") d = "left";
                           	else if(key == "38" && d != "down") d = "up";
                           	else if(key == "39" && d != "left") d = "right";
                           	else if(key == "40" && d != "up") d = "down";
                           	//Now you can control the snake with the keyboard
            	})
})
</script>
</body>
</html>
